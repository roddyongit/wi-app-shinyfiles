choices = unique(thingstodoinwi$Category)
str(thingstodoinwi)
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
str(thingstodoinwi)
choices = unique(thingstodoinwi$Category)
choices
runApp()
library(shiny)
runApp()
runApp()
#------------------------------------------------------
#   choices = c("rock", "pressure", "cars")
#------------------------------------------------------
#
#
library(shiny)
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
# Define UI for dataset viewer application
shinyUI(pageWithSidebar(
# Application title.
headerPanel("Things to do in Wisconsin"),
sidebarPanel(
selectInput("dataset", "Choose a category:",
choices = c("Eating out","Musseum","Sports","Parks",
"Shopping","Water Parks")
),
helpText("Note: Som explanation here for the user"),
),
# Show a summary of the dataset and an HTML table with the requested
# number of observations. Note the use of the h4 function to provide
# an additional header above each output section.
mainPanel(
tableOutput("view")
)
))
runApp()
#------------------------------------------------------
#   choices = c("rock", "pressure", "cars")
#------------------------------------------------------
#
#
library(shiny)
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
# Define UI for dataset viewer application
shinyUI(pageWithSidebar(
# Application title.
headerPanel("Things to do in Wisconsin"),
sidebarPanel(
selectInput("var", "Choose a category:",
choices = c("Eating out" = "Eating out",
"Musseum"  = "Musseum",
"Sports" = "Sports",
"Parks" = "Parks",
"Shopping" = "Shopping",
"Water Parks" = "Water Parks")
),
helpText("Note: Som explanation here for the user"),
),
# Show a summary of the dataset and an HTML table with the requested
# number of observations. Note the use of the h4 function to provide
# an additional header above each output section.
mainPanel(
tableOutput("view")
)
))
library(shiny)
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
# Define server logic required to summarize and view the selected dataset
shinyServer(function(input, output) {
# Return the requested dataset
datasetInput <- reactive({
switch(input$var,
"Eating out" = "Eating out",
"Musseum" = "Musseum",
"Sports"  = "Sports",
"Parks"  = "Parks",
"Shopping" = "Shopping",
"Water Parks" = "Water Parks")
})
# Generate a summary of the dataset
# output$summary <- renderPrint({
#    dataset <- datasetInput()
#    summary(dataset)
})
# Show observations
output$view <- renderTable({
thingstodoinwi[,thingstodoinwi$Category==input$var]
})
})
runApp()
runApp()
runApp()
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
str(df)
?read.table
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE,stringsAsFactors=FALSE)
df = thingstodoinwi
str(df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
displaydf <- function(category) {
# thingstodoinwi[thingstodoinwi$Category==input$var,]
thingstodoinwi[thingstodoinwi$Category==category,]
}
displaydf("Parks")
df
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
displaydf <- function(category) {
# thingstodoinwi[thingstodoinwi$Category==input$var,]
thingstodoinwi[thingstodoinwi$Category==category,]
}
displaydf("Shopping")
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
displaydf <- function(category) {
# thingstodoinwi[thingstodoinwi$Category==input$var,]
thingstodoinwi[thingstodoinwi$Category==category,]
}
displaydf("Water Parks")
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
displaydf <- function(category) {
# thingstodoinwi[thingstodoinwi$Category==input$var,]
thingstodoinwi[thingstodoinwi$Category==category,]
}
displaydf("Sports")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
str(df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
thingstodoinwi[thingstodoinwi$Category == category & thingstodoinwi$City == city,2:6]
shiny::runApp()
shiny::runApp()
shiny::runApp()
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
displaydf <- function(category, city) {
# thingstodoinwi[thingstodoinwi$Category==category,]
thingstodoinwi[thingstodoinwi$Category == category & thingstodoinwi$City == city,2:6]
}
displaydf("Sports","Milwaukee")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?selectInput()
shiny::runApp()
shiny::runApp()
update.packages(ask = FALSE)
shiny::runApp()
shiny::runApp()
shiny::runApp()
choices = setNames(df$Category,df$Category)
choices
choices = setNames(unique(df$Category),unique(df$Category)
choices = setNames(unique(df$Category),unique(df$Category))
choices = setNames(unique(df$Category))
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
l1 = unique(df$Category)
choices = setNames(l1, l1)
choices
shiny::runApp()
l1 = unique(df$Category)
choices = setNames(l1, l1)
choices
?read.table
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
thingstodoinwi[thingstodoinwi$Category == category & thingstodoinwi$City == city,2:6]
df
row(df)
nrow(df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?img
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?if
)
??if()
??if
)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
df
df[df$Category=="Eating Out"]
df[df$Category=="Eating Out",]
df[df$Category=="Eating out",]
nrow(df)
df <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
nrow(df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
nrow(df)
df[df$Category=="Eating out",]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
dim(df)
head(df[,2:6])
df[df$City=="Milwaukee"]
df[df$City=="Milwaukee",]
df[df$City=="Milwaukee",2:6]
df[df$City=="Milwaukee" & df$Category=="Eating out",2:6]
shiny::runApp()
shiny::runApp()
output$obs <- renderText({
obs = nrow (displaydf(input$category, input$city) )
paste("Number of records found for this selection: ", obs)
})
shiny::runApp()
dim(df)
shiny::runApp()
getwd()
dir()
dir(/www)
dir("/www")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
df <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE,  stringsAsFactors=FALSE)
df <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
summary(df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?contact
?conc
shiny::runApp()
shiny::runApp()
